<%- include("../../views/partials/admin/header") %>
  <div class="mainpanel">

    <div class="line"></div>


    <!-- Main Content -->
    <div class="mainpanel p-4">

      <!-- Sales Report Header -->
      <div class="sales-report-header d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
          <i class="fas fa-chart-line fa-2x me-2"></i>
          <h4 class="dashboard-title">Sales Report</h4>
        </div>

        <!-- Duration Selection Dropdown -->
        <div class="d-flex align-items-center">
          <label for="reportDuration" class="form-label me-2">Select Duration:</label>
          <select class="form-select" id="reportDuration" onchange="loadReport(this.value)">
            <option value="1day">1 Day</option>
            <option value="1week">1 Week</option>
            <option value="1month">1 Month</option>
          </select>
        </div>
      </div>

      <!-- 2x2 Grid Layout for Sales Data Cards -->
      <div id="reportDisplay" class="row g-4 mb-4 justify-content-center">
        <!-- Sales Count Card -->
        <div class="col-lg-3 col-md-6">
          <div class="card shadow report-card rounded">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-cogs fa-3x me-3 icon-sales"></i>
                <div>
                  <h5>Overall Sales Count</h5>
                  <p id="salesCount" class="report-value">
                    <%= salesCount %>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Order Amount Card -->
        <div class="col-lg-3 col-md-6">
          <div class="card shadow report-card rounded">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-dollar-sign fa-3x me-3 icon-order"></i>
                <div>
                  <h5>Overall Order Amount</h5>
                  <p id="orderAmount" class="report-value">₹ <%= totalAmount.toFixed(2) %>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Discount Card -->
        <div class="col-lg-3 col-md-6">
          <div class="card shadow report-card rounded">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-tags fa-3x me-3 icon-discount"></i>
                <div>
                  <h5>Overall Discount Amount</h5>
                  <p id="discount" class="report-value">₹ <%= totalDiscount.toFixed(2) %>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Coupons Deduction Card -->
        <div class="col-lg-3 col-md-6">
          <div class="card shadow report-card rounded">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-gift fa-3x me-3 icon-coupons"></i>
                <div>
                  <h5>Coupons Deduction</h5>
                  <p id="coupons" class="report-value">₹ <%= couponDeduction.toFixed(2) %>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="transaction-table my-4">
        <h5 class="text-center">Transactions</h5>
        <div class="table-responsive">
          <table class="table table-striped table-bordered">
            <thead>
              <tr>
                <th>Order ID</th>
                <th>Customer ID</th>
                <th>Total Price</th>
                <th>Order Date</th>
              </tr>
            </thead>
            <tbody id="transactionsTable">
              <!-- Transactions will be dynamically inserted here -->
            </tbody>
          </table>
        </div>
      </div>



      <!-- Download Buttons -->
      <div class="download-buttons text-center">
        <button class="btn btn-primary m-2" onclick="downloadExcel()">Download Excel</button>
        <button class="btn btn-danger m-2" onclick="downloadPDF()">Download PDF</button>
      </div>
    </div>


    <div class="graph px-4">

      <div class="row g-4">
        <!-- Top Selling Products Chart -->
        <div class="col-lg-4 col-md-6">
          <div class="card shadow rounded">
            <div class="card-body">
              <h5 class="card-title text-center">Top Selling Products</h5>
              <canvas id="topSellingProductsChart"></canvas>
            </div>
          </div>
        </div>

        <!-- Top Selling Brands Chart -->
        <div class="col-lg-4 col-md-6">
          <div class="card shadow rounded">
            <div class="card-body">
              <h5 class="card-title text-center">Top Selling Brands</h5>
              <canvas id="topSellingBrandsChart"></canvas>
            </div>
          </div>
        </div>

        <!-- Top Selling Categories Chart -->
        <div class="col-lg-4 col-md-6">
          <div class="card shadow rounded">
            <div class="card-body">
              <h5 class="card-title text-center">Top Selling Categories</h5>
              <canvas id="topSellingCategoriesChart"></canvas>
            </div>
          </div>
        </div>
      </div>

    </div>


  </div>

  </div>



  <!-- chart js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>

  <%- include("../../views/partials/admin/footer") %>


    <script>
      async function loadReport(value) {
        const response = await fetch(`/admin/getReport/?duration=${value}`, {
          method: 'GET',
          headers: { 'Content-Type': 'application/json' },
        });

        const data = await response.json();

        if (response.ok) {
          animate(data);
          document.getElementById('salesCount').innerHTML = `${data.salesCount}`;
          document.getElementById('orderAmount').innerHTML = `₹ ${data.totalAmount.toFixed(2)}`;
          document.getElementById('discount').innerHTML = `₹ ${data.totalDiscount.toFixed(2)}`;
          document.getElementById('coupons').innerHTML = `₹ ${data.couponDeduction.toFixed(2)}`;

          // Populate the transactions table
          const transactionsTable = document.getElementById('transactionsTable');
          transactionsTable.innerHTML = ''; // Clear previous data
          console.log(data.transactions)
          data.transactions.forEach(transaction => {
            const row = `
                <tr>
                    <td>${transaction.orderId}</td>
                    <td>${transaction.customerId}</td>
                    <td>₹ ${transaction.totalPrice.toFixed(2)}</td>
                    <td>${new Date(transaction.createdOn).toLocaleString()}</td>
                </tr>`;
            transactionsTable.innerHTML += row;
          });




        } else {
          alert(data.message);
        }
      }




      function downloadPDF() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        doc.setFontSize(16);
        doc.text("Sales Report", 20, 20);

        const rows = [
          ["Overall Sales Count", document.getElementById('salesCount').innerHTML],
          ["Overall Order Amount", document.getElementById('orderAmount').innerHTML],
          ["Overall Discount Amount", document.getElementById('discount').innerHTML],
          ["Coupons Deduction", document.getElementById('coupons').innerHTML],
        ];

        doc.autoTable({ body: rows, startY: 30 });

        // Add transactions table
        const transactionRows = [];
        document.querySelectorAll('#transactionsTable tr').forEach(row => {
          const cols = Array.from(row.children).map(cell => cell.innerText);
          transactionRows.push(cols);
        });

        if (transactionRows.length > 0) {
          doc.text("Transactions", 20, doc.lastAutoTable.finalY + 10);
          doc.autoTable({
            head: [["Order ID", "Customer ID", "Total Price", "Order Date"]],
            body: transactionRows,
            startY: doc.lastAutoTable.finalY + 15,
          });
        }

        doc.save("sales_report_with_transactions.pdf");
      }



      function downloadExcel() {
        const salesCount = document.getElementById('salesCount')?.innerHTML;
        const orderAmount = document.getElementById('orderAmount')?.innerHTML;
        const discount = document.getElementById('discount')?.innerHTML;
        const coupons = document.getElementById('coupons')?.innerHTML;

        const reportData = [
          ["Particulars", "Value"],
          ["Overall Sales Count", salesCount],
          ["Overall Order Amount", "₹ " + orderAmount],
          ["Overall Discount Amount", "₹ " + discount],
          ["Coupons Deduction", "₹ " + coupons],
        ];

        const transactionData = [["Order ID", "Customer ID", "Total Price", "Order Date"]];
        document.querySelectorAll('#transactionsTable tr').forEach(row => {
          const cols = Array.from(row.children).map(cell => cell.innerText);
          transactionData.push(cols);
        });

        const workbook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(workbook, XLSX.utils.aoa_to_sheet(reportData), "Summary");
        XLSX.utils.book_append_sheet(workbook, XLSX.utils.aoa_to_sheet(transactionData), "Transactions");
        XLSX.writeFile(workbook, "SalesReportWithTransactions.xlsx");
      }


      // Count-up Animation Function
      function animateCount(elementId, endValue, duration) {
        const element = document.getElementById(elementId);
        let startValue = 0;
        const increment = endValue / (duration / 10); // Controls the speed of the count-up
        const isCurrency = elementId !== "salesCount"; // Check if the value is a currency

        const interval = setInterval(() => {
          startValue += increment;
          if (startValue >= endValue) {
            clearInterval(interval);
            startValue = endValue; // Stop at exact value
          }
          element.textContent = isCurrency
            ? '₹ ' + Math.floor(startValue).toLocaleString() // Format with INR for currency
            : Math.floor(startValue).toLocaleString(); // No currency symbol for sales count
        }, 10);
      }

      // Call the animation functions for each element when the page loads
      function animate(data) {
        animateCount("salesCount", data.salesCount, 1000);
        animateCount("orderAmount", data.totalAmount.toFixed(2), 500);
        animateCount("discount", data.totalDiscount.toFixed(2), 500);
        animateCount("coupons", data.couponDeduction.toFixed(2), 500);
      };



      // Prepare data for charts
      const topProducts = <%- JSON.stringify(topSellingProducts) %>;
      const topBrands = <%- JSON.stringify(topSellingBrands) %>;
      const topCategories = <%- JSON.stringify(topSellingCategories) %>;


     

      // Function to create a chart
      function createChart(ctx, labels, data, label, color) {
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: label,
              data: data,
              backgroundColor: color,
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                display: false
              }
            },
            scales: {
              x: {
                title: {
                  display: true,
                  text: 'Items'
                }
              },
              y: {
                title: {
                  display: true,
                  text: 'Sales'
                },
                beginAtZero: true
              }
            }
          }
        });
      }

      // Limit to top 10 items
      const productNames = topProducts.slice(0, 10).map(product => product[0].slice(0, 15));
      const productSales = topProducts.slice(0, 10).map(product => product[1]);

      const brandNames = topBrands.slice(0, 10).map(brand => brand[0]);
      const brandSales = topBrands.slice(0, 10).map(brand => brand[1]);

      const categoryNames = topCategories.slice(0, 10).map(category => category[0]);
      const categorySales = topCategories.slice(0, 10).map(category => category[1]);

      // Create Top Selling Products Chart
      createChart(
        document.getElementById('topSellingProductsChart').getContext('2d'),
        productNames,
        productSales,
        'Top Selling Products',
        'rgba(75, 192, 192, 0.6)'
      );

      // Create Top Selling Brands Chart
      createChart(
        document.getElementById('topSellingBrandsChart').getContext('2d'),
        brandNames,
        brandSales,
        'Top Selling Brands',
        'rgba(153, 102, 255, 0.6)'
      );

      // Create Top Selling Categories Chart
      createChart(
        document.getElementById('topSellingCategoriesChart').getContext('2d'),
        categoryNames,
        categorySales,
        'Top Selling Categories',
        'rgba(255, 159, 64, 0.6)'
      );

    </script>